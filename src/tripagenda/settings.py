"""
Django settings for tripagenda project.

Generated by 'django-admin startproject' using Django 4.2.7.
"""
# TODO: https://slowapi.readthedocs.io/en/latest/examples/
import os
import re
from logging.config import dictConfig
from pathlib import Path

from tripagenda.logging import log_config


dictConfig(log_config)

# Application configs
APP_NAME = "tripagenda"
APP_VERSION = "0.1.0"
API_PREFIX = "/api"
API_INTERNAL_PREFIX = "/internal"
API_VERSION = "v1"

# OpenAI configs
OPENAI_API_KEY = os.getenv("OPENAI_API_KEY", "")  # TODO: fetch from secrets manager
OPENAI_MODEL = os.getenv("OPENAI_MODEL", "gpt-3.5-turbo")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# TODO: fetch from secrets manager
SECRET_KEY = os.getenv("SECRET_KEY", "superdupersecretkey")

ENVIRONMENT = os.getenv("ENVIRONMENT", "local")

DEBUG = True if ENVIRONMENT == "local" else False

ALLOWED_HOSTS = (
    ["*"]
    if ENVIRONMENT == "local"
    else [
        "https://travelagenda-fe.web.app",
        "https://www.travelagenda-fe.web.app",
        "https://tripagenda.co",
        "https://www.tripagenda.co",
        "https://travelmate-next-shadcnui.vercel.app",
    ]
)

SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

INSTALLED_APPS = ["api"]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
]

ASGI_APPLICATION = "tripagenda.asgi.app"

# TODO: setup connection option for cloudsql
if os.getenv("IN_DOCKER"):
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": "api",
            "USER": "api",
            "PASSWORD": "api",
            "HOST": "postgres",
            "PORT": 5432,
            "CONN_MAX_AGE": 60 * 60,
        }
    }

    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": os.getenv("REDIS_URL", "redis://redis/1"),
            "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
        }
    }

    SESSION_ENGINE = "django.contrib.sessions.backends.cached_db"
    SESSION_CACHE_ALIAS = "default"
    SESSION_COOKIE_AGE = 365 * 24 * 60 * 60
    SESSION_COOKIE_SECURE = True
elif os.getenv("DATABASE_URL"):
    # Running under Dokku.
    USER, PASSWORD, HOST, PORT, NAME = re.match(  # type: ignore
        r"^postgres://(?P<username>.*?)\:(?P<password>.*?)\@(?P<host>.*?)\:(?P<port>\d+)\/(?P<db>.*?)$",
        os.getenv("DATABASE_URL", ""),
    ).groups()

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql_psycopg2",
            "NAME": NAME,
            "USER": USER,
            "PASSWORD": PASSWORD,
            "HOST": HOST,
            "PORT": int(PORT),
            "CONN_MAX_AGE": 60 * 60,
        }
    }

    CACHES = {
        "default": {
            "BACKEND": "django_redis.cache.RedisCache",
            "LOCATION": os.getenv("REDIS_URL", "redis://redis/1"),
            "OPTIONS": {"CLIENT_CLASS": "django_redis.client.DefaultClient"},
        }
    }

    SESSION_CACHE_ALIAS = "default"
    SESSION_ENGINE = "django.contrib.sessions.backends.cache"
    SESSION_COOKIE_AGE = 365 * 24 * 60 * 60
    SESSION_COOKIE_SECURE = True
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": BASE_DIR / "db.sqlite3",
        }
    }

LANGUAGE_CODE = "en-gb"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

TEST_RUNNER = "xmlrunner.extra.djangotestrunner.XMLTestRunner"

TEST_OUTPUT_FILE_NAME = "report.xml"
